//Subprojects
evaluationDependsOn('Core')
evaluationDependsOn('GUI')

//Default tasks
defaultTasks 'build'

//Pluginsapply
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

compileJava.options.encoding = 'UTF-8'

//Info
group = 'com.tree_bit'
archivesBaseName = 'rcdl'

//Version
version = '0.1-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
	mavenCentral()
}

test { finalizedBy jacocoTestReport }

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

task codeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    // (change this if you e.g. want to calculate unit test/integration test coverage separately)
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects 
    subprojects.each {
       sourceSets it.sourceSets.main
    }

    reports {
      xml.enabled true
      html.enabled true
      html.destination "${buildDir}/reports/jacoco"
      csv.enabled false
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.test
}

tasks.coveralls {
dependsOn codeCoverageReport
onlyIf { System.env.'CI' }
}


jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

dependencies {
	checkstyle('com.puppycrawl.tools:checkstyle:5.7')
	compile project('Core')
	compile project('GUI')
	compile group: 'com.google.guava', name: 'guava', version: '12.0'
	compile 'org.eluder.coveralls:coveralls-maven-plugin:3.0.1'
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.+'
}

checkstyle {
	configFile = project('Core').file('checkstyle.xml')
}


